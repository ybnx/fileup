// Code generated by goctl. DO NOT EDIT.
// Source: user.proto

package server

import (
	"context"

	"fileup/rpc/user/internal/logic"
	"fileup/rpc/user/internal/svc"
	"fileup/rpc/user/user"
)

type UserServer struct {
	svcCtx *svc.ServiceContext
	user.UnimplementedUserServer
}

func NewUserServer(svcCtx *svc.ServiceContext) *UserServer {
	return &UserServer{
		svcCtx: svcCtx,
	}
}

func (s *UserServer) Register(ctx context.Context, in *user.RegisterRequest) (*user.RegisterResponse, error) {
	l := logic.NewRegisterLogic(ctx, s.svcCtx)
	return l.Register(in)
}

func (s *UserServer) EmailLogin(ctx context.Context, in *user.EmailLoginRequest) (*user.EmailLoginResponse, error) {
	l := logic.NewEmailLoginLogic(ctx, s.svcCtx)
	return l.EmailLogin(in)
}

func (s *UserServer) SendCode(ctx context.Context, in *user.SendCodeRequest) (*user.SendCodeResponse, error) {
	l := logic.NewSendCodeLogic(ctx, s.svcCtx)
	return l.SendCode(in)
}

func (s *UserServer) PasswdLogin(ctx context.Context, in *user.PasswdLoginRequest) (*user.PasswdLoginResponse, error) {
	l := logic.NewPasswdLoginLogic(ctx, s.svcCtx)
	return l.PasswdLogin(in)
}

func (s *UserServer) UserInfo(ctx context.Context, in *user.UserInfoRequest) (*user.UserInfoResponse, error) {
	l := logic.NewUserInfoLogic(ctx, s.svcCtx)
	return l.UserInfo(in)
}

func (s *UserServer) ChangePasswd(ctx context.Context, in *user.ChangePasswdRequest) (*user.ChangePasswdResponse, error) {
	l := logic.NewChangePasswdLogic(ctx, s.svcCtx)
	return l.ChangePasswd(in)
}

func (s *UserServer) Signout(ctx context.Context, in *user.SignoutRequest) (*user.SignoutResponse, error) {
	l := logic.NewSignoutLogic(ctx, s.svcCtx)
	return l.Signout(in)
}
